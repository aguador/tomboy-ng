<?xml version="1.0" encoding="utf-8"?>
<note version="0.3" xmlns:link="http://beatniksoftware.com/tomboy/link" xmlns:size="http://beatniksoftware.com/tomboy/size" xmlns="http://beatniksoftware.com/tomboy">
  <title>tomboy-ng Bugs and Known Issues</title>
  <text xml:space="preserve"><note-content version="0.1"><underline>tomboy-ng Bugs and Known Issues</underline><size:small>

This is the tomboy-ng Known Issues and To-Do list for Github Wiki.  Its generated from a note in the tomboy-ng doc dir, don't edit the wiki directly.</size:small><size:large>

<bold>Bugs</bold></size:large>
Bug reports and feature requests should be via Github https://github.com/tomboy-notes/tomboy-ng/issues
There is some advice about DIY debugging further down this document.<size:huge>


<bold>Known Issues and todo list (updated 2020/12/08)</bold></size:huge>
Recent fixes show as strikeout.

<list><list-item dir="ltr">Do not set you notes directory to be on a network share.  Please keep your notes on a local disk and use the sync facility to share them with other machines (or even the same multiboot machine). </list-item></list>
<list><list-item dir="ltr">We don't do multilevel bullets. Lines starting with an '*' should be auto converted to a Bullet.</list-item></list>
<list><list-item dir="ltr">Tabs do not work like real tabs should.</list-item></list>
<list><list-item dir="ltr">Embed images in a note. Technically something we can now do, indeed, some users have noted they can paste an image in there now but it does not last over a save / reload cycle. Images will break compatibility with old Tomboy and probably Tomdroid, so it will have to be optional. Will have to invent a means to save those images and, of course, work with the recover and archive models. Hmm....</list-item></list>
<list><list-item dir="ltr"> Stop house keeping from moving viewport.</list-item></list>
<list><list-item dir="ltr">Restoring cursor position on note load.</list-item></list>
<list><list-item dir="ltr">Network Sync - most users happy with file sync. With sshfs, you can sync to any server you can ssh to.</list-item></list>
<list><list-item dir="ltr">Dark theme is less than perfect on Windows and unknown on Mac.  Windows will not let us set a dark background to buttons, must look at owner draw modes.  Also useful in TB_SDiff buttons to indicate selected text.</list-item></list>
<list><list-item dir="ltr">NEW - Debian bullseye does not seem to tell tomboy-ng to use a dark theme, while this will probably be fixed (in either bullseye or tomboy-ng), for now, use the --dark-theme command line switch. Its a poor substitue .... </list-item></list>
<list><list-item dir="ltr">We <strikeout>don't have any Undo - Redo capability.</strikeout></list-item></list><strikeout></strikeout><size:large>

<bold>Long term 'maybe' stuff</bold></size:large>
<list><list-item dir="ltr">Move notes into database (ie sqlite for small users, something bigger for BIG users). </list-item></list>
<list><list-item dir="ltr">Better export abilities - at present plain text, markdown and RTF. What about html, PDF etc ? Man Page</list-item></list>
<list><list-item dir="ltr">Import ability. Import a directory of Tomboy notes. Import other formats.</list-item></list>
<list><list-item dir="ltr">Revise controls, at present modeled on Tomboy, we can improve.</list-item></list>
<list><list-item dir="ltr">Install models - Flatpack, Snap etc ?.</list-item></list><size:large>


<bold>Debugging</bold></size:large>
If you have problems with the application, or wish to make a feature request, please report via the github tomboy-ng issues facility. 
If tomboy-ng crashes or does something unexpected, there are a number of command line switches that may reveal whats going on (t either yourself of, if posted to 'issues', the author).  Using these command line switches is easy in Linux but Windows or Mac users need to capture the information in a file, see below -

<bold>Command Line Switches</bold>

<list><list-item dir="ltr"><monospace>   -delay-startn                Delay startup by 2 Seconds to allow OS to settle</monospace></list-item></list><monospace></monospace>
<list><list-item dir="ltr"><monospace>   -l CCode  --lang=CCode       Force Language, supported es, nl</monospace></list-item></list><monospace></monospace>
<list><list-item dir="ltr"><monospace>   --debug-log=SOME.LOG         Direct debug output to SOME.LOG.</monospace></list-item></list><monospace></monospace>
<list><list-item dir="ltr"><monospace>   -h --help                    Show this help message and exit.</monospace></list-item></list><monospace></monospace>
<list><list-item dir="ltr"><monospace>   --version                    Print version and exit</monospace></list-item></list><monospace></monospace>
<list><list-item dir="ltr"><monospace>   --no-splash                  Dont show small status/splash window</monospace></list-item></list><monospace></monospace>
<list><list-item dir="ltr"><monospace>   --debug-sync                 Show debug messages during Sync</monospace></list-item></list><monospace></monospace>
<list><list-item dir="ltr"><monospace>   --debug-index                Show debug messages while indexing notes</monospace></list-item></list><monospace></monospace>
<list><list-item dir="ltr"><monospace>   --debug-spell                Show debug messages while spell setup</monospace></list-item></list><monospace></monospace>
<list><list-item dir="ltr"><monospace>   --config-dir=PATH_to_DIR     Create or use an alternative config</monospace></list-item></list><monospace></monospace>
<list><list-item dir="ltr"><monospace>   -o --open-note=PATH_to_NOTE  Open indicated note, switch is optional</monospace></list-item></list><monospace></monospace>
<list><list-item dir="ltr"><monospace>   --save-exit                  After import single note, save and exit.</monospace></list-item></list><monospace></monospace>

<bold>Capturing to a file</bold>
Windows and Mac do not, for this purpose, have a console. But they too  can be told to capture this log info to a file using  another  command  line  switch or by setting an env variable that specifies a file name. Please ensure you have permission to write to the location specified. For example a linux user would  -

       set tomboy-ng_debuglog=c:\%userprofile%\debug.txt

<bold>Mac</bold> users can do something similar from a terminal :

       open /Applications/tomboy-ng.app --args     "--debug-log=$HOME/tomboy-ng.log"  "--debug-sync"

       Linux users who need a debug logfile can also :

       tomboy-ng --debug-sync --debug-log=$HOME/tomboy-ng.log

<bold>Windows</bold> users should do something like this -

<list><list-item dir="ltr">Rightclick the startbutton and select "run".  In the field, enter this command line exactly as show (including the inverted commas) -</list-item></list>
<list><list-item dir="ltr">"C:\Program Files\tomboy-ng\tomboy-ng.exe" --debug-index --debug-log=%userprofile%\Desktop\tomboy-log.txt</list-item></list>
<list><list-item dir="ltr">Press enter, tomboy-ng should start up normally. Close it. </list-item></list>
<list><list-item dir="ltr">A file called tomboy-log.txt will have been created on your desktop.</list-item></list>

In all cases, you may need to zip that file up to post it on Github. If  you  do intend to post such a log file to (eg) the Tomboy help system, do please check through it first to ensure there is nothing there you don't want the world to see. It may include things like note Titles for example.


</note-content></text>
  <last-change-date>2020-12-08T10:18:34.5136386+11:00</last-change-date>
  <last-metadata-change-date>2020-12-08T10:18:34.5136386+11:00</last-metadata-change-date>
  <create-date>2018-06-23T12:35:30.7960000+10:00</create-date>
  <cursor-position>1</cursor-position>
  <selection-bound-position>1</selection-bound-position>
  <width>1211</width>
  <height>626</height>
  <x>20</x>
  <y>30</y>
  <open-on-startup>False</open-on-startup>
</note>